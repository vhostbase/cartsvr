{"version":3,"sources":["ducks/products.js","ducks/cart.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/index.js","containers/Cart.js","components/Product/Product.js","components/Product/index.js","containers/Product.js","components/ProductList/ProductList.js","components/ProductList/index.js","containers/ProductList.js","App.js","data/products.js","index.js"],"names":["getProducts","state","props","products","getProduct","find","item","id","CART_ADD","CART_REMOVE","initialState","items","currency","removeFromCart","productId","type","payload","isInCart","cart","indexOf","getItems","map","getCurrency","getTotal","reduce","acc","price","CartItem","_ref","name","onClick","react_default","a","createElement","className","Cart","total","length","Cart_CartItem","Object","assign","key","connect","dispatch","Product","handleClick","_this$props","_this","addToCart","_this$props2","this","image","src","alt","Component","ProductList","product","containers_Product","App","containers_ProductList","containers_Cart","data","rootReducer","combineReducers","arguments","undefined","action","objectSpread","concat","toConsumableArray","handleCartAdd","filter","handleCartRemove","store","createStore","productsData","window","__REDUX_DEVTOOLS_EXTENSION__","render","es","src_App","document","getElementById"],"mappings":"2PAMO,SAASA,EAAYC,EAAOC,GAC/B,OAAOD,EAAME,SAGV,SAASC,EAAWH,EAAOC,GAC9B,OAAOD,EAAME,SAASE,KAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAMK,KCRzD,IAAMC,EAAa,WACbC,EAAc,cAGdC,EAAe,CACjBC,MAAO,GACPC,SAAU,OAsCP,SAASC,EAAeC,GAC3B,MAAO,CACHC,KAAMN,EACNO,QAAS,CACLF,cAML,SAASG,EAAShB,EAAOC,GAC5B,OAA+C,IAAxCD,EAAMiB,KAAKP,MAAMQ,QAAQjB,EAAMK,IAGnC,SAASa,EAASnB,EAAOC,GAC5B,OAAOD,EAAMiB,KAAKP,MAAMU,IAAI,SAAAd,GAAE,OAAIH,EAAWH,EAAO,CAAEM,SAGnD,SAASe,EAAYrB,EAAOC,GAC/B,OAAOD,EAAMiB,KAAKN,SAGf,SAASW,EAAStB,EAAOC,GAC5B,OAAOD,EAAMiB,KAAKP,MAAMa,OAAO,SAACC,EAAKlB,GAEjC,OAAOkB,EADMrB,EAAWH,EAAO,CAAEM,OACfmB,OACnB,GCtEP,IAmBeC,EAnBE,SAAAC,GAAwC,IAArCC,EAAqCD,EAArCC,KAAMH,EAA+BE,EAA/BF,MAAOd,EAAwBgB,EAAxBhB,SAAUkB,EAAcF,EAAdE,QACvC,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBJ,QAASA,GAAnD,KACAC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBL,IAEvCE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBR,EAAnC,IAA2Cd,KC2BxCuB,EAjCF,SAAAP,GAAgD,IAA7CjB,EAA6CiB,EAA7CjB,MAAOyB,EAAsCR,EAAtCQ,MAAOxB,EAA+BgB,EAA/BhB,SAAUC,EAAqBe,EAArBf,eACpC,OACIkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVvB,EAAM0B,OAAS,GACZN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVvB,EAAMU,IAAI,SAAAf,GAAI,OACXyB,EAAAC,EAAAC,cAACK,EAADC,OAAAC,OAAA,CAAUC,IAAKnC,EAAKC,IAAQD,EAA5B,CAAkCwB,QAAS,kBAAMjB,EAAeP,EAAKC,WAI/D,IAAjBI,EAAM0B,QACHN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,iBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,UAAqCE,EAArC,IAA6CxB,QCnBtDuB,YCaAO,cAZS,SAACzC,EAAOC,GAC5B,MAAO,CACHS,MAAOS,EAASnB,GAChBW,SAAUU,EAAYrB,GACtBmC,MAAOb,EAAStB,KAIG,SAAC0C,GAAD,MAAe,CACtC9B,eAAgB,SAACN,GAAD,OAAQoC,EAAS9B,EAAeN,OAGrCmC,CAA6CP,2CCgC7CS,6MA5CXC,YAAc,WAAM,IAAAC,EACoCC,EAAK7C,MAAjDK,EADQuC,EACRvC,GAAIyC,EADIF,EACJE,UAAWnC,EADPiC,EACOjC,eADPiC,EACuB7B,SAGnCJ,EAAeN,GAEfyC,EAAUzC,4EAIT,IAAA0C,EAC8CC,KAAKhD,MAAhD2B,EADHoB,EACGpB,KAAMH,EADTuB,EACSvB,MAAOd,EADhBqC,EACgBrC,SAAUuC,EAD1BF,EAC0BE,MAAOlC,EADjCgC,EACiChC,SAEtC,OACIc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKmB,IAAKD,EAAOE,IAAI,YACrBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAKJ,GACLE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBR,EAAjC,IAAyCd,GACzCmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAWjB,EAAW,iBAAmB,kBACzCa,QAASoB,KAAKL,aAEb5B,EAAW,SAAW,yBAzB7BqC,aCAPV,YCYAF,cAXS,SAACzC,EAAOC,GAC5B,MAAO,CACHe,SAAUA,EAAShB,EAAOC,KAIP,SAACyC,GAAD,MAAe,CACtCK,UAAW,SAACzC,GAAD,OAAQoC,EP4BZ,CACH5B,KAAMP,EACNQ,QAAS,CACLF,UO/B8BP,MACtCM,eAAgB,SAACN,GAAD,OAAQoC,EAAS9B,EAAeN,OAGrCmC,CAA6CE,GCQ7CW,EAnBK,SAAA3B,GAAkB,IAAfzB,EAAeyB,EAAfzB,SACnB,OACI4B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACX/B,EAASkB,IAAI,SAAAmC,GAAO,OACjBzB,EAAAC,EAAAC,cAAA,MAAIQ,IAAKe,EAAQjD,GAAI2B,UAAU,sBAC7BH,EAAAC,EAAAC,cAACwB,EAAYD,SCRlBD,YCOAb,cANS,SAACzC,EAAOC,GAC5B,MAAO,CACHC,SAAUH,EAAYC,KAIfyC,CAAyBa,GCoBzBG,EA1BH,WACR,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,oCAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0B,EAAD,OAEJ5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC2B,EAAD,QAIR7B,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,kCCuBD4B,EA7CF,CACX,CACEtD,GAAI,EACJsB,KAAM,sBACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,iBAET,CACE5C,GAAI,EACJsB,KAAM,eACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,iBAET,CACE5C,GAAI,EACJsB,KAAM,sBACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,iBAET,CACE5C,GAAI,EACJsB,KAAM,gBACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,iBAET,CACE5C,GAAI,EACJsB,KAAM,iBACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,iBAET,CACE5C,GAAI,EACJsB,KAAM,cACNH,MAAO,OACPd,SAAU,MACVuC,MAAO,kBC/BLW,SAAcC,YAAgB,CAChC7C,KbCW,WAAiD,IAAnCjB,EAAmC+D,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAA3BtD,EAAcwD,EAAaF,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GACxD,OAAQE,EAAOnD,MACX,KAAKP,EACD,OAQZ,SAAuBP,EAAOe,GAC1B,OAAOuB,OAAA4B,EAAA,EAAA5B,CAAA,GACAtC,EADP,CAEIU,MAAK,GAAAyD,OAAA7B,OAAA8B,EAAA,EAAA9B,CAAOtC,EAAMU,OAAb,CAAoBK,EAAQF,cAXtBwD,CAAcrE,EAAOiE,EAAOlD,SACvC,KAAKP,EACD,OAaZ,SAA0BR,EAAOe,GAC7B,OAAOuB,OAAA4B,EAAA,EAAA5B,CAAA,GACAtC,EADP,CAEIU,MAAOV,EAAMU,MAAM4D,OAAO,SAAAhE,GAAE,OAAIA,IAAOS,EAAQF,cAhBpC0D,CAAiBvE,EAAOiE,EAAOlD,SAC1C,QACI,OAAOf,IaPfE,SdXW,WACX,OADyC6D,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAJ,OccrCS,EAAQC,YACRZ,EACA,CACI3D,SAAUwE,GAEdC,OAAOC,8BAAgCD,OAAOC,gCAGlDC,iBACI/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAUN,MAAOA,GACb1C,EAAAC,EAAAC,cAAC+C,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.4a0e0d5c.chunk.js","sourcesContent":["// reducer\nexport default function products(state = []) {\n    return state; // nothing to do here, but we need products node in redux store\n}\n\n// selectors\nexport function getProducts(state, props) {\n    return state.products;\n}\n\nexport function getProduct(state, props) {\n    return state.products.find(item => item.id === props.id);\n}\n","import { getProduct } from '../ducks/products';\n\n// actions\nconst CART_ADD   = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE';\n\n// reducer\nconst initialState = {\n    items: [], // array of product ids\n    currency: 'EUR'\n};\n\nexport default function cart(state = initialState, action = {}) {\n    switch (action.type) {\n        case CART_ADD:\n            return handleCartAdd(state, action.payload);\n        case CART_REMOVE:\n            return handleCartRemove(state, action.payload);\n        default:\n            return state;\n    }\n}\n\nfunction handleCartAdd(state, payload) {\n    return {\n        ...state,\n        items: [ ...state.items, payload.productId ]\n    };\n}\n\nfunction handleCartRemove(state, payload) {\n    return {\n        ...state,\n        items: state.items.filter(id => id !== payload.productId)\n    };\n}\n\n// action creators\nexport function addToCart(productId) {\n    return {\n        type: CART_ADD,\n        payload: {\n            productId\n        }\n    }\n}\n\nexport function removeFromCart(productId) {\n    return {\n        type: CART_REMOVE,\n        payload: {\n            productId\n        }\n    }\n}\n\n// selectors\nexport function isInCart(state, props) {\n    return state.cart.items.indexOf(props.id) !== -1;\n}\n\nexport function getItems(state, props) {\n    return state.cart.items.map(id => getProduct(state, { id }));\n}\n\nexport function getCurrency(state, props) {\n    return state.cart.currency;\n}\n\nexport function getTotal(state, props) {\n    return state.cart.items.reduce((acc, id) => {\n        const item = getProduct(state, { id });\n        return acc + item.price;\n    }, 0);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CartItem = ({ name, price, currency, onClick }) => {\n    return (\n        <div className=\"cart-item\">\n            <div>\n                <button className=\"btn btn-danger btn-xs\" onClick={onClick}>X</button>\n                <span className=\"cart-item__name\">{name}</span>\n            </div>\n            <div className=\"cart-item__price\">{price} {currency}</div>\n        </div>\n    );\n}\n\nCartItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default CartItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CartItem from './CartItem';\n\nconst Cart = ({ items, total, currency, removeFromCart }) => {\n    return (\n        <div>\n            <h3>Shopping Cart</h3>\n\n            <div className=\"cart\">\n                <div className=\"panel panel-default\">\n                    <div className=\"panel-body\">\n                        {items.length > 0 && (\n                            <div className=\"cart__body\">\n                                {items.map(item => (\n                                    <CartItem key={item.id} {...item} onClick={() => removeFromCart(item.id)} />\n                                ))}\n                            </div>\n                        )}\n                        {items.length === 0 && (\n                            <div className=\"alert alert-info\">Cart is empty</div>\n                        )}\n                        <div className=\"cart__total\">Total: {total} {currency}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nCart.propTypes = {\n    items: PropTypes.array,\n    total: PropTypes.number,\n    currency: PropTypes.string,\n    removeFromCart: PropTypes.func.isRequired\n}\n\nexport default Cart;\n","import Cart from './Cart';\nimport './Cart.css';\n\nexport default Cart;\n","import { connect } from 'react-redux';\nimport Cart from '../components/Cart';\nimport { getItems, getCurrency, getTotal, removeFromCart } from '../ducks/cart';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        items: getItems(state, props),\n        currency: getCurrency(state, props),\n        total: getTotal(state, props)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    removeFromCart: (id) => dispatch(removeFromCart(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Product extends Component {\n    handleClick = () => {\n        const { id, addToCart, removeFromCart, isInCart } = this.props;\n\n        if (isInCart) {\n            removeFromCart(id);\n        } else {\n            addToCart(id);\n        }\n    }\n\n    render() {\n        const { name, price, currency, image, isInCart } = this.props;\n\n        return (\n            <div className=\"product thumbnail\">\n                <img src={image} alt=\"product\" />\n                <div className=\"caption\">\n                    <h3>{name}</h3>\n                    <div className=\"product__price\">{price} {currency}</div>\n                    <div className=\"product__button-wrap\">\n                        <button\n                            className={isInCart ? 'btn btn-danger' : 'btn btn-primary'}\n                            onClick={this.handleClick}\n                        >\n                            {isInCart ? 'Remove' : 'Add to cart'}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProduct.propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number,\n    currency: PropTypes.string,\n    image: PropTypes.string,\n    isInCart: PropTypes.bool.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    removeFromCart: PropTypes.func.isRequired,\n}\n\nexport default Product;\n","import Product from './Product';\nimport './Product.css';\n\nexport default Product;\n","import { connect } from 'react-redux';\nimport Product from '../components/Product';\nimport { addToCart, removeFromCart, isInCart } from '../ducks/cart';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isInCart: isInCart(state, props)\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    addToCart: (id) => dispatch(addToCart(id)),\n    removeFromCart: (id) => dispatch(removeFromCart(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Product from '../../containers/Product';\n\nconst ProductList = ({ products }) => {\n    return (\n        <div>\n            <h3>Products</h3>\n            <ul className=\"product-list\">\n              {products.map(product => (\n                  <li key={product.id} className=\"product-list__item\">\n                    <Product {...product} />\n                  </li>\n              ))}\n            </ul>\n        </div>\n    );\n}\n\nProductList.propTypes = {\n    products: PropTypes.array,\n}\n\nexport default ProductList;\n","import ProductList from './ProductList';\nimport './ProductList.css';\n\nexport default ProductList;\n","import { connect } from 'react-redux';\nimport ProductList from '../components/ProductList';\nimport { getProducts } from '../ducks/products';\n\nconst mapStateToProps = (state, props) => {\n    return {\n        products: getProducts(state, props)\n    }\n}\n\nexport default connect(mapStateToProps)(ProductList);\n","import React from 'react';\nimport Cart from './containers/Cart';\nimport ProductList from './containers/ProductList';\n\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <h1>Tharak Shopping Cart</h1>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <ProductList />\n                </div>\n                <div className=\"col-md-4\">\n                    <Cart />\n                </div>\n            </div>\n\n            <footer>\n                <small>\n                    made by Tharak\n                </small>\n            </footer>\n        </div>\n    );\n}\n\nexport default App;\n","const data = [\n  {\n    id: 1,\n    name: 'Ohrensessel Josslyn',\n    price: 499.99,\n    currency: 'EUR',\n    image: 'images/01.jpg',\n  },\n  {\n    id: 2,\n    name: 'Sessel Sofie',\n    price: 249.99,\n    currency: 'EUR',\n    image: 'images/02.jpg',\n  },\n  {\n    id: 4,\n    name: 'Schlafsessel Rovigo',\n    price: 239.99,\n    currency: 'EUR',\n    image: 'images/04.jpg',\n  },\n  {\n    id: 6,\n    name: 'Sessel Little',\n    price: 119.99,\n    currency: 'EUR',\n    image: 'images/06.jpg',\n  },\n  {\n    id: 5,\n    name: 'Sessel Peacock',\n    price: 599.99,\n    currency: 'EUR',\n    image: 'images/05.jpg',\n  },\n  {\n    id: 3,\n    name: 'Sessel Anna',\n    price: 149.99,\n    currency: 'EUR',\n    image: 'images/03.jpg',\n  }\n];\n\nexport default data;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\nimport cartReducer from './ducks/cart';\nimport productsReducer from './ducks/products';\nimport App from './App';\nimport productsData from './data/products';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst rootReducer = combineReducers({\n    cart: cartReducer,\n    products: productsReducer\n});\n\nlet store = createStore(\n    rootReducer,\n    {\n        products: productsData // initial store values\n    },\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // for debugging\n);\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}